services:
  - type: web
    plan: free
    name: pex-agreements
    env: docker
    autoDeploy: false
    repo: https://github.com/Project-Exoduss/agreements
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: pex-agreements-db
          property: connectionString
      - key: SECRET_KEY_BASE
        generateValue: true
      - key: NODE_ENV
        value: production
      - key: RAILS_ENV
        value: production
      - key: RAILS_SERVE_STATIC_FILES
        value: true
      - key: RAILS_LOG_TO_STDOUT
        value: true
      - key: RAILS_SERVE_STATIC_FILES
        value: true
      - key: DEBUG
        value: true
    buildCommand: |
      # Previous build steps...
      rm -rf node_modules yarn.lock public/packs
      yarn add shakapacker@8.0.2 --exact
      yarn install --frozen-lockfile --network-timeout 600000
      yarn list shakapacker
      rm -rf public/packs
      RAILS_ENV=production NODE_ENV=production yarn run build:production
      
      # Debug information
      echo "=== Checking build artifacts ==="
      ls -la public/packs/
      echo "=== Manifest content ==="
      cat public/packs/manifest.json
      
      bundle exec rake assets:precompile RAILS_ENV=production NODE_ENV=production
      bundle exec rake db:migrate
      
      # More debug information
      echo "=== Final packs directory structure ==="
      find public/packs/ -type f
      echo "=== Checking image files ==="
      find app/javascript/images/ -type f
      
    startCommand: |
      # Add runtime checks before starting the server
      echo "=== Runtime Environment ==="
      env | grep RAILS
      echo "=== Checking public/packs at runtime ==="
      ls -la public/packs/
      echo "=== Checking manifest at runtime ==="
      cat public/packs/manifest.json
      
      # Start the server
      /app/bin/bundle exec puma -C /app/config/puma.rb --dir /app
databases:
  - name: pex-agreements-db
    plan: free